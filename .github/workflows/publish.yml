name: publish

on:
  push:
    tags:
      - v*


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@5.1
        with:
          cli: latest
          bb: latest

      - name: Setup clj-kondo
        uses: DeLaGuardo/setup-clj-kondo@master
        with:
          version: '2022.05.27'

      - name: Setup cljstyle
        uses: just-sultanov/setup-cljstyle@v1
        with:
          version: '0.15.0'

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Run linters
        run: bb lint


  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Setup openjdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@5.1
        with:
          cli: latest
          bb: latest

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Setup deps
        run: bb setup

      - name: Setup environment variables
        run: >-
          echo 'GIANT_BOMB_API_URL=${{ secrets.GIANT_BOMB_API_URL }}' >> $GITHUB_ENV;
          echo 'GIANT_BOMB_API_KEY=${{ secrets.GIANT_BOMB_API_KEY }}' >> $GITHUB_ENV;

      - name: Run tests
        run: bb test


  publish:
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: 'master'

      - name: Setup environment variables
        run: >-
          echo 'GIANT_BOMB_API_URL=${{ secrets.GIANT_BOMB_API_URL }}' >> $GITHUB_ENV;
          echo 'GIANT_BOMB_API_KEY=${{ secrets.GIANT_BOMB_API_KEY }}' >> $GITHUB_ENV;

      - name: Setup openjdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Setup clojure
        uses: DeLaGuardo/setup-clojure@5.1
        with:
          cli: latest
          bb: latest

      - name: Cache deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.clojure
            ~/.cpcache
          key: ${{ runner.os }}-deps-${{ hashFiles('**/deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Setup deps
        run: bb setup

      - name: Show version
        run: bb version

      - name: Show project info
        run: bb project

      - name: Run build app
        run: bb build

      - name: Publish to Github Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
